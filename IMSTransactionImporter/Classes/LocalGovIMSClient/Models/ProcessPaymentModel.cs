// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace LocalGovIMSClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProcessPaymentModel : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The AmountPaid property</summary>
        public double? AmountPaid { get; set; }
        /// <summary>The AuthResult property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthResult { get; set; }
#nullable restore
#else
        public string AuthResult { get; set; }
#endif
        /// <summary>The CardPrefix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardPrefix { get; set; }
#nullable restore
#else
        public string CardPrefix { get; set; }
#endif
        /// <summary>The CardSuffix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardSuffix { get; set; }
#nullable restore
#else
        public string CardSuffix { get; set; }
#endif
        /// <summary>The Fee property</summary>
        public double? Fee { get; set; }
        /// <summary>The MerchantReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MerchantReference { get; set; }
#nullable restore
#else
        public string MerchantReference { get; set; }
#endif
        /// <summary>The PaymentMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PaymentMethod { get; set; }
#nullable restore
#else
        public string PaymentMethod { get; set; }
#endif
        /// <summary>The PspReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PspReference { get; set; }
#nullable restore
#else
        public string PspReference { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::LocalGovIMSClient.Models.ProcessPaymentModel"/> and sets the default values.
        /// </summary>
        public ProcessPaymentModel()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::LocalGovIMSClient.Models.ProcessPaymentModel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::LocalGovIMSClient.Models.ProcessPaymentModel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::LocalGovIMSClient.Models.ProcessPaymentModel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AmountPaid", n => { AmountPaid = n.GetDoubleValue(); } },
                { "AuthResult", n => { AuthResult = n.GetStringValue(); } },
                { "CardPrefix", n => { CardPrefix = n.GetStringValue(); } },
                { "CardSuffix", n => { CardSuffix = n.GetStringValue(); } },
                { "Fee", n => { Fee = n.GetDoubleValue(); } },
                { "MerchantReference", n => { MerchantReference = n.GetStringValue(); } },
                { "PaymentMethod", n => { PaymentMethod = n.GetStringValue(); } },
                { "PspReference", n => { PspReference = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("AmountPaid", AmountPaid);
            writer.WriteStringValue("AuthResult", AuthResult);
            writer.WriteStringValue("CardPrefix", CardPrefix);
            writer.WriteStringValue("CardSuffix", CardSuffix);
            writer.WriteDoubleValue("Fee", Fee);
            writer.WriteStringValue("MerchantReference", MerchantReference);
            writer.WriteStringValue("PaymentMethod", PaymentMethod);
            writer.WriteStringValue("PspReference", PspReference);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
