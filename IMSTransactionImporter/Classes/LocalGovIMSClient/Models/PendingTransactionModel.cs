// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace LocalGovIMSClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PendingTransactionModel : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The AccountReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountReference { get; set; }
#nullable restore
#else
        public string AccountReference { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The Amount property</summary>
        public double? Amount { get; set; }
        /// <summary>The CancelUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CancelUrl { get; set; }
#nullable restore
#else
        public string CancelUrl { get; set; }
#endif
        /// <summary>The CreatedDate property</summary>
        public DateTimeOffset? CreatedDate { get; set; }
        /// <summary>The ExpiryDate property</summary>
        public DateTimeOffset? ExpiryDate { get; set; }
        /// <summary>The ExternalReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalReference { get; set; }
#nullable restore
#else
        public string ExternalReference { get; set; }
#endif
        /// <summary>The FailUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FailUrl { get; set; }
#nullable restore
#else
        public string FailUrl { get; set; }
#endif
        /// <summary>The FundCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FundCode { get; set; }
#nullable restore
#else
        public string FundCode { get; set; }
#endif
        /// <summary>The Id property</summary>
        public int? Id { get; private set; }
        /// <summary>The InternalReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InternalReference { get; private set; }
#nullable restore
#else
        public string InternalReference { get; private set; }
#endif
        /// <summary>The MopCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MopCode { get; set; }
#nullable restore
#else
        public string MopCode { get; set; }
#endif
        /// <summary>The Narrative property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Narrative { get; set; }
#nullable restore
#else
        public string Narrative { get; set; }
#endif
        /// <summary>The OfficeCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OfficeCode { get; set; }
#nullable restore
#else
        public string OfficeCode { get; set; }
#endif
        /// <summary>The PayeeAddressLine1 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayeeAddressLine1 { get; set; }
#nullable restore
#else
        public string PayeeAddressLine1 { get; set; }
#endif
        /// <summary>The PayeeAddressLine2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayeeAddressLine2 { get; set; }
#nullable restore
#else
        public string PayeeAddressLine2 { get; set; }
#endif
        /// <summary>The PayeeAddressLine3 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayeeAddressLine3 { get; set; }
#nullable restore
#else
        public string PayeeAddressLine3 { get; set; }
#endif
        /// <summary>The PayeeAddressLine4 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayeeAddressLine4 { get; set; }
#nullable restore
#else
        public string PayeeAddressLine4 { get; set; }
#endif
        /// <summary>The PayeeName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayeeName { get; set; }
#nullable restore
#else
        public string PayeeName { get; set; }
#endif
        /// <summary>The PayeePostCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayeePostCode { get; set; }
#nullable restore
#else
        public string PayeePostCode { get; set; }
#endif
        /// <summary>The Reference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reference { get; private set; }
#nullable restore
#else
        public string Reference { get; private set; }
#endif
        /// <summary>The StatusId property</summary>
        public int? StatusId { get; private set; }
        /// <summary>The SuccessUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SuccessUrl { get; set; }
#nullable restore
#else
        public string SuccessUrl { get; set; }
#endif
        /// <summary>The TransactionDate property</summary>
        public DateTimeOffset? TransactionDate { get; set; }
        /// <summary>The UserCode property</summary>
        public int? UserCode { get; set; }
        /// <summary>The VatAmount property</summary>
        public double? VatAmount { get; private set; }
        /// <summary>The VatCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VatCode { get; set; }
#nullable restore
#else
        public string VatCode { get; set; }
#endif
        /// <summary>The VatRate property</summary>
        public float? VatRate { get; private set; }
        /// <summary>
        /// Instantiates a new <see cref="global::LocalGovIMSClient.Models.PendingTransactionModel"/> and sets the default values.
        /// </summary>
        public PendingTransactionModel()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::LocalGovIMSClient.Models.PendingTransactionModel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::LocalGovIMSClient.Models.PendingTransactionModel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::LocalGovIMSClient.Models.PendingTransactionModel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AccountReference", n => { AccountReference = n.GetStringValue(); } },
                { "Amount", n => { Amount = n.GetDoubleValue(); } },
                { "CancelUrl", n => { CancelUrl = n.GetStringValue(); } },
                { "CreatedDate", n => { CreatedDate = n.GetDateTimeOffsetValue(); } },
                { "ExpiryDate", n => { ExpiryDate = n.GetDateTimeOffsetValue(); } },
                { "ExternalReference", n => { ExternalReference = n.GetStringValue(); } },
                { "FailUrl", n => { FailUrl = n.GetStringValue(); } },
                { "FundCode", n => { FundCode = n.GetStringValue(); } },
                { "Id", n => { Id = n.GetIntValue(); } },
                { "InternalReference", n => { InternalReference = n.GetStringValue(); } },
                { "MopCode", n => { MopCode = n.GetStringValue(); } },
                { "Narrative", n => { Narrative = n.GetStringValue(); } },
                { "OfficeCode", n => { OfficeCode = n.GetStringValue(); } },
                { "PayeeAddressLine1", n => { PayeeAddressLine1 = n.GetStringValue(); } },
                { "PayeeAddressLine2", n => { PayeeAddressLine2 = n.GetStringValue(); } },
                { "PayeeAddressLine3", n => { PayeeAddressLine3 = n.GetStringValue(); } },
                { "PayeeAddressLine4", n => { PayeeAddressLine4 = n.GetStringValue(); } },
                { "PayeeName", n => { PayeeName = n.GetStringValue(); } },
                { "PayeePostCode", n => { PayeePostCode = n.GetStringValue(); } },
                { "Reference", n => { Reference = n.GetStringValue(); } },
                { "StatusId", n => { StatusId = n.GetIntValue(); } },
                { "SuccessUrl", n => { SuccessUrl = n.GetStringValue(); } },
                { "TransactionDate", n => { TransactionDate = n.GetDateTimeOffsetValue(); } },
                { "UserCode", n => { UserCode = n.GetIntValue(); } },
                { "VatAmount", n => { VatAmount = n.GetDoubleValue(); } },
                { "VatCode", n => { VatCode = n.GetStringValue(); } },
                { "VatRate", n => { VatRate = n.GetFloatValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("AccountReference", AccountReference);
            writer.WriteDoubleValue("Amount", Amount);
            writer.WriteStringValue("CancelUrl", CancelUrl);
            writer.WriteDateTimeOffsetValue("CreatedDate", CreatedDate);
            writer.WriteDateTimeOffsetValue("ExpiryDate", ExpiryDate);
            writer.WriteStringValue("ExternalReference", ExternalReference);
            writer.WriteStringValue("FailUrl", FailUrl);
            writer.WriteStringValue("FundCode", FundCode);
            writer.WriteStringValue("MopCode", MopCode);
            writer.WriteStringValue("Narrative", Narrative);
            writer.WriteStringValue("OfficeCode", OfficeCode);
            writer.WriteStringValue("PayeeAddressLine1", PayeeAddressLine1);
            writer.WriteStringValue("PayeeAddressLine2", PayeeAddressLine2);
            writer.WriteStringValue("PayeeAddressLine3", PayeeAddressLine3);
            writer.WriteStringValue("PayeeAddressLine4", PayeeAddressLine4);
            writer.WriteStringValue("PayeeName", PayeeName);
            writer.WriteStringValue("PayeePostCode", PayeePostCode);
            writer.WriteStringValue("SuccessUrl", SuccessUrl);
            writer.WriteDateTimeOffsetValue("TransactionDate", TransactionDate);
            writer.WriteIntValue("UserCode", UserCode);
            writer.WriteStringValue("VatCode", VatCode);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
