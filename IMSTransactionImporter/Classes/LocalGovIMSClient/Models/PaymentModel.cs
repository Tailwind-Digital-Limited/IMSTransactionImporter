// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace LocalGovIMSClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PaymentModel : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The Address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::LocalGovIMSClient.Models.Address? Address { get; set; }
#nullable restore
#else
        public global::LocalGovIMSClient.Models.Address Address { get; set; }
#endif
        /// <summary>The Basket property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::LocalGovIMSClient.Models.BasketItem>? Basket { get; set; }
#nullable restore
#else
        public List<global::LocalGovIMSClient.Models.BasketItem> Basket { get; set; }
#endif
        /// <summary>The CallRecordingSource property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CallRecordingSource { get; set; }
#nullable restore
#else
        public string CallRecordingSource { get; set; }
#endif
        /// <summary>The CallRecordingUserName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CallRecordingUserName { get; set; }
#nullable restore
#else
        public string CallRecordingUserName { get; set; }
#endif
        /// <summary>The CancelUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CancelUrl { get; set; }
#nullable restore
#else
        public string CancelUrl { get; set; }
#endif
        /// <summary>The ExternalReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalReference { get; set; }
#nullable restore
#else
        public string ExternalReference { get; set; }
#endif
        /// <summary>The FailUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FailUrl { get; set; }
#nullable restore
#else
        public string FailUrl { get; set; }
#endif
        /// <summary>The MopCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MopCode { get; set; }
#nullable restore
#else
        public string MopCode { get; set; }
#endif
        /// <summary>The SuccessUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SuccessUrl { get; set; }
#nullable restore
#else
        public string SuccessUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::LocalGovIMSClient.Models.PaymentModel"/> and sets the default values.
        /// </summary>
        public PaymentModel()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::LocalGovIMSClient.Models.PaymentModel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::LocalGovIMSClient.Models.PaymentModel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::LocalGovIMSClient.Models.PaymentModel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "Address", n => { Address = n.GetObjectValue<global::LocalGovIMSClient.Models.Address>(global::LocalGovIMSClient.Models.Address.CreateFromDiscriminatorValue); } },
                { "Basket", n => { Basket = n.GetCollectionOfObjectValues<global::LocalGovIMSClient.Models.BasketItem>(global::LocalGovIMSClient.Models.BasketItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "CallRecordingSource", n => { CallRecordingSource = n.GetStringValue(); } },
                { "CallRecordingUserName", n => { CallRecordingUserName = n.GetStringValue(); } },
                { "CancelUrl", n => { CancelUrl = n.GetStringValue(); } },
                { "ExternalReference", n => { ExternalReference = n.GetStringValue(); } },
                { "FailUrl", n => { FailUrl = n.GetStringValue(); } },
                { "MopCode", n => { MopCode = n.GetStringValue(); } },
                { "SuccessUrl", n => { SuccessUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::LocalGovIMSClient.Models.Address>("Address", Address);
            writer.WriteCollectionOfObjectValues<global::LocalGovIMSClient.Models.BasketItem>("Basket", Basket);
            writer.WriteStringValue("CallRecordingSource", CallRecordingSource);
            writer.WriteStringValue("CallRecordingUserName", CallRecordingUserName);
            writer.WriteStringValue("CancelUrl", CancelUrl);
            writer.WriteStringValue("ExternalReference", ExternalReference);
            writer.WriteStringValue("FailUrl", FailUrl);
            writer.WriteStringValue("MopCode", MopCode);
            writer.WriteStringValue("SuccessUrl", SuccessUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
