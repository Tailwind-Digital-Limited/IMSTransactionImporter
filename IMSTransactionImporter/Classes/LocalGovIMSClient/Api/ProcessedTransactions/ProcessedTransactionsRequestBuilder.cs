// <auto-generated/>
#pragma warning disable CS0618
using LocalGovIMSClient.Api.ProcessedTransactions.Item;
using LocalGovIMSClient.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace LocalGovIMSClient.Api.ProcessedTransactions
{
    /// <summary>
    /// Builds and executes requests for operations under \api\ProcessedTransactions
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ProcessedTransactionsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the LocalGovIMSClient.api.ProcessedTransactions.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::LocalGovIMSClient.Api.ProcessedTransactions.Item.WithReferenceItemRequestBuilder"/></returns>
        public global::LocalGovIMSClient.Api.ProcessedTransactions.Item.WithReferenceItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("reference", position);
                return new global::LocalGovIMSClient.Api.ProcessedTransactions.Item.WithReferenceItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ProcessedTransactionsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/ProcessedTransactions{?accountReference*,amount*,appReference*,endDate*,fundCodes*,internalReference*,mopCodes*,narrative*,pspReference*,receiptNumber*,startDate*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ProcessedTransactionsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/ProcessedTransactions{?accountReference*,amount*,appReference*,endDate*,fundCodes*,internalReference*,mopCodes*,narrative*,pspReference*,receiptNumber*,startDate*}", rawUrl)
        {
        }
        /// <returns>A List&lt;global::LocalGovIMSClient.Models.ProcessedTransactionModel&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::LocalGovIMSClient.Models.ProcessedTransactionModel>?> GetAsync(Action<RequestConfiguration<global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder.ProcessedTransactionsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::LocalGovIMSClient.Models.ProcessedTransactionModel>> GetAsync(Action<RequestConfiguration<global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder.ProcessedTransactionsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::LocalGovIMSClient.Models.ProcessedTransactionModel>(requestInfo, global::LocalGovIMSClient.Models.ProcessedTransactionModel.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <returns>A <see cref="global::LocalGovIMSClient.Models.ProcessedTransactionModel"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::LocalGovIMSClient.Models.ProcessedTransactionModel?> PostAsync(global::LocalGovIMSClient.Models.ProcessedTransactionModel body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::LocalGovIMSClient.Models.ProcessedTransactionModel> PostAsync(global::LocalGovIMSClient.Models.ProcessedTransactionModel body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::LocalGovIMSClient.Models.ProcessedTransactionModel>(requestInfo, global::LocalGovIMSClient.Models.ProcessedTransactionModel.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder.ProcessedTransactionsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder.ProcessedTransactionsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::LocalGovIMSClient.Models.ProcessedTransactionModel body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::LocalGovIMSClient.Models.ProcessedTransactionModel body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::LocalGovIMSClient.Api.ProcessedTransactions.ProcessedTransactionsRequestBuilder(rawUrl, RequestAdapter);
        }
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        #pragma warning disable CS1591
        public partial class ProcessedTransactionsRequestBuilderGetQueryParameters 
        #pragma warning restore CS1591
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("accountReference")]
            public string? AccountReference { get; set; }
#nullable restore
#else
            [QueryParameter("accountReference")]
            public string AccountReference { get; set; }
#endif
            [QueryParameter("amount")]
            public double? Amount { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("appReference")]
            public string? AppReference { get; set; }
#nullable restore
#else
            [QueryParameter("appReference")]
            public string AppReference { get; set; }
#endif
            [QueryParameter("endDate")]
            public DateTimeOffset? EndDate { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("fundCodes")]
            public string[]? FundCodes { get; set; }
#nullable restore
#else
            [QueryParameter("fundCodes")]
            public string[] FundCodes { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("internalReference")]
            public string? InternalReference { get; set; }
#nullable restore
#else
            [QueryParameter("internalReference")]
            public string InternalReference { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("mopCodes")]
            public string[]? MopCodes { get; set; }
#nullable restore
#else
            [QueryParameter("mopCodes")]
            public string[] MopCodes { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("narrative")]
            public string? Narrative { get; set; }
#nullable restore
#else
            [QueryParameter("narrative")]
            public string Narrative { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("pspReference")]
            public string? PspReference { get; set; }
#nullable restore
#else
            [QueryParameter("pspReference")]
            public string PspReference { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("receiptNumber")]
            public string? ReceiptNumber { get; set; }
#nullable restore
#else
            [QueryParameter("receiptNumber")]
            public string ReceiptNumber { get; set; }
#endif
            [QueryParameter("startDate")]
            public DateTimeOffset? StartDate { get; set; }
        }
    }
}
#pragma warning restore CS0618
